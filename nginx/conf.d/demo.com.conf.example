### 代理
server {
    listen 443;
 
    server_name git.demo.com;
 
    client_max_body_size 128M;
 
    location / { 
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://container-gogs:3000; # 这里填容器地址，如果不知道填写公网IP也是可以的。
    }
}

### 负载均衡配置 ###
server {
    listen 127.0.0.1:8001;

    root /www/demo/www/public;

    # expires -1;
    # etag off;

    include conf.d/php_params;
}

server {
    listen 127.0.0.1:8002;

    root /www/demo/www1/public;

    include conf.d/php_params;
}

upstream web {
    server 127.0.0.1:8001 weight=1;
    server 127.0.0.1:8002 weight=2;

    # 权重 hash 二选一
    # ip_hash;
}

server {
    listen 80;
    server_name www.demo.com;

    location / {
        proxy_pass http://web;
    }
}
### 负载均衡配置结束 ###
#
# 泛解析 + rewrite
server {
    listen 80; ## 监听 ipv4 上的 80 端口

    server_name ~^(?<subdomain>.+).demo.com$;

    root /www/demo/$subdomain/public;

    include conf.d/php_params;
}

### https 配置 ###
server {
    listen 443 default_server;

	server_name www.demo.com;

    ssl on;

    root /www/demo/www/public;

    ssl_certificate   /etc/nginx/conf.d/certs/live/www.demo.com/fullchain.pem;
    ssl_certificate_key  /etc/nginx/conf.d/certs/live/www.demo.com/privkey.pem;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    include conf.d/php_params;
}

# 分别为 80 和 443 端口指定 default_server
# http -> https
server {
   listen 80 default_server;
   server_name demo.com;

   location / {
       return 301 http://www.demo.com$request_uri;
   }
}
# 泛解析 + rewrite
server {
   listen 80;
   server_name *.demo.com;

   include conf.d/certbot_params;

   location / {
       return 301 https://$host$request_uri;
   }
}
